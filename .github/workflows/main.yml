name: Build and Deploy website to S3

on:
  push:
    branches:
      - main # Trigger deployment when changes are pushed to the `main` branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.16.0 # Set Node.js version to use (adjust to your preference)

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the React app
      - name: Build the app
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build # This job runs only after the build job completes successfully

    steps:
      # Step 1: Checkout code (for the deployment job)
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Store your AWS access key in GitHub secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Store your AWS secret access key in GitHub secrets
          aws-region: ap-south-1 # Specify your AWS region

      # Step 3: Sync the build directory to S3
      - name: Deploy to S3
        run: |
          aws s3 sync ./dist s3://my-portfolio-v2 --delete

      # Step 4: Invalidate CloudFront Cache (Optional but recommended)
      # - name: Invalidate CloudFront Cache
      #   run: |
      #     DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[0].Id" --output text)
      #     aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
